version: "3"
services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-2022-database
    command: /bin/bash /scripts/entrypoint.sh
    volumes:
      - dbdata:/var/opt/mssql
      - ./database/scripts:/scripts
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=ApitelBank#@%#$
    ports:
      - 1433:1433
  flyway:
    image: redgate/flyway
    container_name: flyway
    command: migrate -environment=local -connectRetries=60
    volumes:
      - ./database/flyway/conf/:/flyway/conf
      - ./database/flyway/data/:/flyway/data
      - ./database/flyway/migrations/:/flyway/migrations
    depends_on:
      - db
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    volumes:
      - kafkadata:/bitnami/kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - kafka
  main_banking_service:
    image: eclipse-temurin:21
    container_name: main-banking-service
    working_dir: /app
    command: ./mvnw spring-boot:run
    ports:
      - 3001:3001
    volumes:
      - ./main-banking-service:/app
    depends_on:
      - db
      - kafka
  reporting_service:
    image: eclipse-temurin:21
    container_name: reporting-service
    working_dir: /app
    command: ./mvnw spring-boot:run
    ports:
      - 3002:3002
    volumes:
      - ./reporting-service:/app
    depends_on:
      - db
      - kafka
  bank_partner_service:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: bank-partner-service
    working_dir: /app
    command: dotnet watch
    ports:
      - 3003:3003
    environment:
      - ASPNETCORE_HTTP_PORTS=3003
    volumes:
      - ./bank-partner-service:/app
    depends_on:
      - db
      - kafka
      - reporting_service
  bank_manager_portal:
    image: node:20
    container_name: bank-manager-portal
    working_dir: /app
    command: /bin/sh -c "npm install && npm start"
    ports:
      - 3000:3000
    volumes:
      - ./bank-manager-portal:/app
    environment:
      # For react scripts, native file watching does not work/ is unreliable when in docker.
      # Instruct the dev server to use polling instead. 
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true       
    depends_on:
      - reporting_service
volumes:
  dbdata:
  kafkadata:
