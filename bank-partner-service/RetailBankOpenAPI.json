{
  "openapi": "3.0.1",
  "info": {
    "title": "Apitel Bank",
    "description": "Partner API for Apitel Bank. Other banks, businesses, and personas.",
    "version": "v1"
  },
  "paths": {
    "/customers": {
      "post": {
        "tags": ["Customers"],
        "summary": "Creates a new customers. The customers will also get new bank accounts. A customer can only have one bank account.\r\nThe customer's bank account will also automatically get a debit card.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCustomerRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCustomerRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCustomerRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAcountResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAcountResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAcountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{personaId}/accounts": {
      "get": {
        "tags": ["Customers"],
        "summary": "Gets the personas' active accounts and their linked debit cards.",
        "parameters": [
          {
            "name": "personaId",
            "in": "path",
            "description": "The id of the persona to get the accounts of.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAcountResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAcountResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAcountResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/debitorders": {
      "post": {
        "tags": ["DebitOrders"],
        "summary": "Creates a new debit order.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateDebitOrderRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateDebitOrderRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateDebitOrderRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDebitOrderResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDebitOrderResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDebitOrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/debitorders/{debitOrderId}": {
      "delete": {
        "tags": ["DebitOrders"],
        "summary": "Cancels a debit order.",
        "parameters": [
          {
            "name": "debitOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/transactions/payments": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Makes payment from given persona account into recepient account.\r\n\r\nThis endpoint will not accept transactions whose references is not unique.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MakePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MakePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MakePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MakePaymentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MakePaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MakePaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/deposits": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Makes a deposit into the accounts for the given persona ids and amounts.\r\n\r\nThis endpoint will not accept transactions whose references is not unique.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MakeDepositRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MakeDepositRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MakeDepositRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/transactions/{reference}/status": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Returns status of deposit/payment with given reference.",
        "parameters": [
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New|Accepted|Verified|Rejected|Reversed values for status",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionStatusResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Transactions"],
        "summary": "Marks the transaction as verified or reversed.\r\n\r\nOther banks call this endpoint when they have successfully/unsuccessfully processed a deposit into their bank account from us.",
        "parameters": [
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionStatusResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateCustomerRequest": {
        "type": "object",
        "properties": {
          "personaId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CreateDebitOrderRequest": {
        "type": "object",
        "properties": {
          "amountInMibiBBDough": {
            "type": "integer",
            "format": "int64"
          },
          "personaId": {
            "type": "integer",
            "format": "int64"
          },
          "dayInMonth": {
            "type": "integer",
            "format": "int32"
          },
          "endsAt": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "recepient": {
            "$ref": "#/components/schemas/PaymentRecepient"
          }
        },
        "additionalProperties": false
      },
      "CreateDebitOrderResponse": {
        "type": "object",
        "properties": {
          "debitOrderId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAcountResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "int64"
          },
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "balanceInMibiBBDough": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetTransactionStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MakeDepositRequest": {
        "type": "object",
        "properties": {
          "toPersonaId": {
            "type": "integer",
            "format": "int64"
          },
          "amountInMibiBBDough": {
            "type": "integer",
            "format": "int64"
          },
          "reference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MakePaymentRequest": {
        "type": "object",
        "properties": {
          "senderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amountInMibiBBDough": {
            "type": "integer",
            "format": "int64"
          },
          "recepient": {
            "$ref": "#/components/schemas/PaymentRecepient"
          },
          "reference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MakePaymentResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentRecepient": {
        "type": "object",
        "properties": {
          "bankId": {
            "type": "string",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTransactionRequest": {
        "type": "object",
        "properties": {
          "processedSuccessfully": {
            "type": "boolean"
          },
          "rejectionCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rejectionReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
